{"uid":"81603b4a6564c935","name":"test_login","fullName":"test_conduit.test_conduit.TestConduit#test_login","historyId":"1364295df6123b1f7d0675ef0135443f","time":{"start":1656004752831,"stop":1656004765745,"duration":12914},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7fc0a3ed4a60>\n\n    def test_login(self):\n        login(self.browser, user[\"email\"], user[\"password\"])\n>       logout_btn = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@active-class=\"active\"]')))\n\ntest_conduit/test_conduit.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bb254a7f95c4b67e3aa9b6f64ec21314\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7fc0a3813970>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1656004750991,"stop":1656004752830,"duration":1839},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7fc0a3ed4a60>\n\n    def test_login(self):\n        login(self.browser, user[\"email\"], user[\"password\"])\n>       logout_btn = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@active-class=\"active\"]')))\n\ntest_conduit/test_conduit.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bb254a7f95c4b67e3aa9b6f64ec21314\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7fc0a3813970>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","steps":[],"attachments":[{"uid":"e41845c1bbfe72d4","name":"log","source":"e41845c1bbfe72d4.txt","type":"text/plain","size":338},{"uid":"5fb4bac5ea097266","name":"stdout","source":"5fb4bac5ea097266.txt","type":"text/plain","size":1},{"uid":"1880777c6947b13c","name":"stderr","source":"1880777c6947b13c.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1656004765753,"stop":1656004765808,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test_conduit"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az129-21"},{"name":"thread","value":"3087-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_conduit.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"81603b4a6564c935.json","parameterValues":[]}