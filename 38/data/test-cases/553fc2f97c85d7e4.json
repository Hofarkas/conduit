{"uid":"553fc2f97c85d7e4","name":"test_invalid_registration","fullName":"test_conduit.test_conduit.TestConduit#test_invalid_registration","historyId":"376fec875e0a6c3bfac027562f74de4f","time":{"start":1656004387774,"stop":1656004392108,"duration":4334},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>>()\n +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>.is_displayed","statusTrace":"self = <test_conduit.TestConduit object at 0x7f1c068c2fa0>\n\n    def test_invalid_registration(self):\n        registration(self.browser, user[\"username\"], user[\"email\"], user[\"password\"])\n        error_message = self.browser.find_element_by_xpath('//button[@class=\"swal-button swal-button--confirm\"]')\n    \n>       assert error_message.is_displayed()\nE       assert False\nE        +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>>()\nE        +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>.is_displayed\n\ntest_conduit/test_conduit.py:46: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1656004386270,"stop":1656004387772,"duration":1502},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>>()\n +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>.is_displayed","statusTrace":"self = <test_conduit.TestConduit object at 0x7f1c068c2fa0>\n\n    def test_invalid_registration(self):\n        registration(self.browser, user[\"username\"], user[\"email\"], user[\"password\"])\n        error_message = self.browser.find_element_by_xpath('//button[@class=\"swal-button swal-button--confirm\"]')\n    \n>       assert error_message.is_displayed()\nE       assert False\nE        +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>>()\nE        +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"aefb32d15e88b0a687abc4f34a131e59\", element=\"bf4e82c9-e426-4cb1-998a-49f4ac51c738\")>.is_displayed\n\ntest_conduit/test_conduit.py:46: AssertionError","steps":[],"attachments":[{"uid":"2ea04f40240a513f","name":"log","source":"2ea04f40240a513f.txt","type":"text/plain","size":338},{"uid":"42f98d89ecf4add6","name":"stdout","source":"42f98d89ecf4add6.txt","type":"text/plain","size":1},{"uid":"8a54dba55375b743","name":"stderr","source":"8a54dba55375b743.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1656004392161,"stop":1656004392216,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test_conduit"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az135-713"},{"name":"thread","value":"3319-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_conduit.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"553fc2f97c85d7e4.json","parameterValues":[]}